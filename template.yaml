AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Api:
    Cors:
      AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'*'"

Resources:
  MyMultimediaManagerApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: MyMultimediaManagerApi
      StageName: Prod
      AccessLogSetting:
        DestinationArn: arn:aws:iam::693966062309:role/MyMultimediaManagerApi-access-logs-role
        Format: '{"requestId":"$context.requestId","ip": "$context.identity.sourceIp","caller": "$context.identity.caller","user":"$context.identity.user","requestTime":"$context.requestTime","httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath","status":"$context.status","protocol":"$context.protocol","responseLength":"$context.responseLength"}'

  MyMultimediaManagerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: MyMultimediaManagerFunction
      Handler: wrzesniak.rafal.my.multimedia.manager.aws.StreamLambdaHandler::handleRequest
      Runtime: java17
      CodeUri: .
      Timeout: 30
      Events:
        MyMultimediaManagerApiEvent:
          Type: Api
          Properties:
            Path: /
            Method: ANY
            RestApiId:
              Ref: MyMultimediaManagerApi

Outputs:
  MyMultimediaManagerApiId:
    Description: "API Gateway ID"
    Value:
      Ref: MyMultimediaManagerApi
  MyMultimediaManagerApiUrl:
    Description: "API Gateway URL"
    Value:
      Fn::Sub: "https://${MyMultimediaManagerApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
