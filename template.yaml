AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  MyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/api-gateway/MyMultimediaManagerApi-access-logs

  MyMultimediaManagerApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: MyMultimediaManagerApi
      StageName: Prod
      AccessLogSetting:
        DestinationArn: !GetAtt MyLogGroup.Arn
        Format: '{"requestId":"$context.requestId","ip": "$context.identity.sourceIp","caller": "$context.identity.caller","user":"$context.identity.user","requestTime":"$context.requestTime","httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath","status":"$context.status","protocol":"$context.protocol","responseLength":"$context.responseLength"}'

  MyMultimediaManagerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: MyMultimediaManagerFunction
      Handler: wrzesniak.rafal.my.multimedia.manager.aws.StreamLambdaHandler::handleRequest
      Runtime: java17
      CodeUri: .
      Timeout: 30
      Events:
        MyMultimediaManagerApiEvent:
          Type: Api
          Properties:
            Path: /
            Method: ANY
            RestApiId:
              Ref: MyMultimediaManagerApi

Outputs:
  MyMultimediaManagerApiId:
    Description: "API Gateway ID"
    Value:
      Ref: MyMultimediaManagerApi
  MyMultimediaManagerApiUrl:
    Description: "API Gateway URL"
    Value:
      Fn::Sub: "https://${MyMultimediaManagerApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
